################################################################################
# global pipeline config

stages:
  - snakemake_global
  - snakemake_conda
  - test

variables:
  ENV_DIR: ./this-env
  TESTCONF: config/dynamic-testing.yml
  # speed up cache compression
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  CACHE_COMPRESSION_LEVEL: "fast"

# only run this pipeline on master/default/feature branches
workflow:
  rules:
    - if: $CI_COMMIT_BRANCH == /^x_/
      when: never

# NOTE NIST gitlab runner doesn't seem to have docker :(
# image: condaforge/mambaforge:4.12.0-0

################################################################################
# reusable object to permit lazy coder syndrome

.smk_global_cache: &smk_global_cache
  paths:
    - this-env
  key:
    files:
      - env.yml

.smk_envs_cache: &smk_envs_cache
  paths:
    - .snakemake/conda
  key:
    files:
      - workflow/envs

################################################################################
# set up global conda environment

# - ASSUME mamba is already installed on the system hosting the gitlab runner
# - ASSUME the cache will track any changes to env.yml and will force an update
#   if this changes
install_global_env:
  stage: snakemake_global
  script:
    - >
      test -d $ENV_DIR
      && echo "Env already created"
      || mamba env create -f env.yml -p $ENV_DIR
  cache: 
    - <<: *smk_global_cache

################################################################################
# set up snakemake rule conda environments

install_smk_conda_envs:
  stage: snakemake_conda
  before_script: &conda-before
    - conda activate $ENV_DIR
  script:
    - snakemake --use-conda -c 1 --configfile $TESTCONF --conda-create-envs-only
  cache:
    - <<: *smk_global_cache
      policy: pull
    - <<: *smk_envs_cache

################################################################################
# test snakemake things

snakemake_dry:
  needs: [install_global_env]
  stage: test
  before_script: *conda-before
  script:
    - snakemake --use-conda -c 1 --configfile $TESTCONF --dryrun
  cache:
    - <<: *smk_global_cache
      policy: pull

snakemake_chr21:
  needs: [install_smk_conda_envs, install_global_env]
  stage: test
  before_script: *conda-before
  script:
    - snakemake -p --use-conda -c 1 --verbose --configfile $TESTCONF
  cache:
    - <<: *smk_global_cache
      policy: pull
    - <<: *smk_envs_cache
      policy: pull
